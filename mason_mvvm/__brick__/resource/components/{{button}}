import 'package:flutter/material.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import '../color.dart';
import '/utils/utils.dart';

class PlatformButton {
  Widget getButton({
    required Widget child,
    required void Function()? onPressed,
    double? width,
    double? height,
    Color? color,
    double? radius,
    bool loading = false,
  }) =>
      ios
          ? _cupertinoButton(
              child: child,
              onPressed: onPressed,
              width: width,
              height: height,
              color: color,
              loading: loading,
              radius: radius)
          : _elevatedButton(
              child: child,
              onPressed: onPressed,
              width: width,
              height: height,
              color: color,
              loading: loading,
              radius: radius);

  Widget _cupertinoButton({
    required Widget child,
    required void Function()? onPressed,
    double? width,
    double? height,
    Color? color,
    double? radius,
    bool loading = false,
  }) =>
      SizedBox(
        height: height?.h ?? 50.0.h,
        width: width?.w ?? double.infinity.w,
        child: CupertinoButton(
            borderRadius: BorderRadius.circular(radius?.r ?? 10.0.r),
            color: color ?? buttonColor,
            padding: EdgeInsets.symmetric(horizontal: 16),
            onPressed: loading == true ? null : onPressed,
            child: loading ? const CupertinoActivityIndicator() : child),
      );

  ElevatedButton _elevatedButton({
    required Widget? child,
    required void Function()? onPressed,
    double? width,
    double? height,
    Color? color,
    double? radius,
    bool loading = false,
  }) =>
      ElevatedButton(
          style: ElevatedButton.styleFrom(
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(radius?.r ?? 10.0.r),
              ),
              padding: EdgeInsets.symmetric(horizontal: 16),
              backgroundColor: color ?? buttonColor,
              minimumSize:
                  Size(width?.w ?? double.infinity.w, height?.h ?? 50.0.h)),
          onPressed: loading == true ? null : onPressed,
          child: loading
              ? const CircularProgressIndicator(
                  color: Colors.white,
                )
              : child);
}
