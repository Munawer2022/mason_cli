import 'package:flutter/material.dart';
import '/utils/routes/routes_name.dart';
{{#isFlutterBloc}}
import '/view_model/injection/injection_container.dart';
{{/isFlutterBloc}}

{{#auth}}
/*
 ************************ Auth ************************
*/
import '/view/splash/splash_view.dart';
import '/view/auth/login/login_view.dart';
import '/view/auth/sign_up/sign_up_view.dart';
import '/view/auth/forgot_password/forgot_password_View.dart';
{{/auth}}
/*
 ************************ {{class_name}} ************************
*/
import '/view/{{folder_name}}/{{folder_name}}_view.dart';

class Routes {
  static Route<dynamic> generateRoute(RouteSettings settings) {
    PageRoute pageRoute = PageRoute();
    switch (settings.name) {
        {{#auth}}
      case RoutesName.splash:
        return pageRoute.getPageRoute(const SplashView());
      case RoutesName.login:
        return pageRoute.getPageRoute(const LoginView());
      case RoutesName.signUp:
        return pageRoute.getPageRoute(const SignUpView());
      case RoutesName.forgotPassword:
        return pageRoute.getPageRoute(const ForgotPasswordView());
        {{/auth}}
      case RoutesName.{{folder_name}}:
        return pageRoute.getPageRoute({{class_name}}View(
          {{#isFlutterBloc}}
          cubit: getIt()
          {{/isFlutterBloc}}
          ));
      default:
        return pageRoute.getDefaultRoute();
    }
  }
}

class PageRoute extends DefaultPageRoute {
  Route getPageRoute(page) => MaterialPageRoute(
        builder: (BuildContext context) => page,
      );
}

class DefaultPageRoute {
  Route getDefaultRoute() => MaterialPageRoute(builder: (_) {
        return const Scaffold(
          body: Center(
            child: Text('No route defined'),
          ),
        );
      });
}
