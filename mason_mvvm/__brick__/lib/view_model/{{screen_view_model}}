import 'package:flutter/material.dart';
import '/respository/{{repo_file_name}}';

{{#isGet}} 
import '../model/{{folder_name}}_model.dart';
import '/data/response/api_response.dart';
{{/isGet}}
{{#isPost}}
import '/resource/app_navigator.dart';
import '/utils/routes/routes_name.dart';
{{/isPost}}


class {{class_name}}ViewModel with ChangeNotifier {
  final {{folder_name}}Repository = {{class_name}}Repository();

{{#isGet}}
  ApiResponse<{{class_name}}Model> {{folder_name}}Model = ApiResponse.loading();

  set{{class_name}}Loading(ApiResponse<{{class_name}}Model> response) {
    {{folder_name}}Model = response;
    notifyListeners();
  }

  Future<void> fetch{{class_name}}Api() async {
    set{{class_name}}Loading(ApiResponse.loading());

    {{folder_name}}Repository.fetch{{class_name}}Api().then((value) {
      set{{class_name}}Loading(ApiResponse.completed(value));
    }).onError((error, stackTrace) {
      set{{class_name}}Loading(ApiResponse.error(error.toString()));
    });
  }

{{/isGet}}

{{#isPost}}

  bool _{{folder_name}}Loading = false;
  bool get {{folder_name}}Loading => _{{folder_name}}Loading;

  set{{class_name}}Loading(bool value) {
    _{{folder_name}}Loading = value;
    notifyListeners();
  }

  Future<void> {{folder_name}}Api(dynamic data, BuildContext context) async {
    set{{class_name}}Loading(true);

    {{folder_name}}Repository.{{folder_name}}Api(data).then((value) {
      set{{class_name}}Loading(false);
      AppNavigator.pushNamed(context, RoutesName.{{folder_name}});
    }).onError((error, stackTrace) {
      set{{class_name}}Loading(false);
    });
  }
{{/isPost}}

}
