import 'package:fpdart/fpdart.dart';
import '/domain/entities/{{folder_name}}/mock_{{folder_name}}_model.dart';
import '/data/models/{{folder_name}}/{{folder_name}}_model.dart';
import '/core/app_url.dart';
import '/domain/repositories/network/network_base_api_service.dart';
import '/domain/failure/{{folder_name}}/{{folder_name}}_failure.dart';
import '/domain/repositories/{{folder_name}}/{{folder_name}}_base_api_service.dart';

class {{class_name}}Repository implements {{class_name}}BaseApiService {
  final NetworkBaseApiService _networkRepository;

  {{class_name}}Repository(this._networkRepository);

  @override
  Future<Either<{{class_name}}Failure, Mock{{class_name}}Model>> {{folder_name}}() =>
      _networkRepository.get<Map<String, dynamic>>(url: AppUrl.{{folder_name}}).then(
            (value) => value.fold((l) => left({{class_name}}Failure(error: l.error)),
              (r) => right({{class_name}}Model.fromJson(r).toDomain())));
}