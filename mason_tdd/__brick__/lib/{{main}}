import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import '/features/{{folder_name}}/{{page_file_name}}';
import '/features/{{folder_name}}/{{initial_params_file_name}}';
import '/config/theme/theme_data.dart';
import '/injection_container.dart' as di;
import '/injection_container.dart';
import '/data/datasources/theme/theme_data_source.dart';
import '/core/constants/global.dart';
import '/core/show/checker_navigator_observer.dart';
import 'package:device_preview/device_preview.dart';
{{#auth}}
import '/features/splash/splash_initial_params.dart';
import '/features/splash/splash_page.dart';
{{/auth}}

void main() async {
//  setCustomSystemUIOverlayStyle();
  WidgetsFlutterBinding.ensureInitialized();
  await di.init();
  runApp(DevicePreview(
      enabled: false,
      builder: (context) {
        return const MyApp();
      }));
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context)  => ScreenUtilInit(
      designSize: const Size(430, 932),
      minTextAdapt: true,
      splitScreenMode: true,
      builder: (_, child) => BlocBuilder(
      bloc: getIt<ThemeDataSources>(),
      builder: (context, state) {
        state as bool;
        return MaterialApp(
          // useInheritedMediaQuery: true,
                locale: DevicePreview.locale(context),
                builder: DevicePreview.appBuilder,
          navigatorKey: GlobalConstants.navigatorKey,
                  scaffoldMessengerKey: GlobalConstants.scaffoldMessengerKey,
                  navigatorObservers: [CheckerNavigatorObserver()],
            debugShowCheckedModeBanner: false,
            theme: state ? darkTheme : lightTheme,
            // scaffoldMessengerKey: scaffoldMessengerKey,
        // home: {{class_name}}Page(cubit: getIt(param1: const {{class_name}}InitialParams()))
        {{#auth}}
        home: SplashPage(cubit: getIt(param1: const SplashInitialParams()))
        {{/auth}}
        );
            }));
}